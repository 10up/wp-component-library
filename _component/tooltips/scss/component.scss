// Breakpoints
$bp-small:          40.625em !default;      // 650px
$bp-medium:         53.125em !default;      // 850px
$bp-large:          62.5em !default;        // 1000px

// Mixins
@mixin triangle($tri-size, $tri-color, $tri-direction) {
  border: inset $tri-size;
  content: '';
  display: inline-block;
  height: 0;
  speak: none;
  width: 0;

  @if ($tri-direction == top) {
    border-color: $tri-color transparent transparent transparent;
    border-top-style: solid;
  }

  @if ($tri-direction == bottom) {
    border-color: transparent transparent $tri-color transparent;
    border-bottom-style: solid;
  }

  @if ($tri-direction == left) {
    border-color: transparent transparent transparent $tri-color;
    border-left-style: solid;
  }

  @if ($tri-direction == right) {
    border-color: transparent $tri-color transparent transparent;
    border-right-style: solid;
  }
}

// Namespace, if you want it (update the HTML too though)
$ns: '' !default;

// Varables
$tip--color-white: #fff !default;
$tip--color-black: #000 !default;
$tip--color-gray: #666 !default;

$tip--bg: fade-out($tip--color-black, .1) !default;
$tip--base-size: 12px !default;
$tip--arrow-size: 6px !default;

$tip--trigger--border-bottom: 1px dotted $tip--color-gray !default;

// Setting flags for the types you need because right & left need
// extra CSS to be cancelled out on small screens - let's not generate
// CSS we don't need, OK?... OK?!

$tip--compile-bottom: true !default;
$tip--compile-left: true !default;
$tip--compile-right: true !default;

$tip--delay: 1s !default;
$tip--no-delay: .18s !default;

// ---------------------------------------------------------------------

// parent wrapper
.#{$ns}a11y-tip {
  display: inline-block;
  position: relative;

  // element that triggers the tooltip (help) pop-up
  &__trigger {

    // if not an element that has inherit focus, add visual
    // affordance to let users know this element is not just
    // regular text.
    &[tabindex] {
      border-bottom: $tip__trigger--border-bottom;
    }

    // on hover/focus of the trigger, reveal the help which
    // is placed directly after the trigger in the DOM
    // (as you would not describe something before you know
    // what that something is.)
    &[aria-describedby]:hover + ,
    &[aria-describedby]:not(.a11y-tip__trigger--toggle):focus +,
    &[aria-describedby][aria-expanded="true"] {

      .a11y-tip__help,
      .a11y-tip__help:after {
        opacity: 1;
        pointer-events: auto;
        visibility: visible;
      }

      .a11y-tip__help {

        &,
        &:after {
          -webkit-transform: translate(-50%, 0px);
          -moz-transform: translate(-50%, 0px);
          transform: translate(-50%, 0px);
        }

        @media screen and ( min-width: $bp-small ) {

          @if $tip--compile-left == true {
            &--left,
            &--left:after{
              -webkit-transform: translate(0px, -50%);
              -moz-transform: translate(0px, -50%);
              transform: translate(0px, -50%);
            }
          } // end if

          @if $tip--compile-right == true {
            &--right,
            &--right:after {
              transform: translate(0px, -50%);
            }
          } // end if

        } // end @media

      } // .a11y-tip__help

    } // end :hover, :focus

    &[aria-describedby].a11y-tip__trigger--toggle:hover + {
      .a11y-tip__help,
      .a11y-tip__help:after {
        opacity: 0;
        pointer-events: none;
        visibility: hidden;
      }
    }

    &[aria-expanded="true"].a11y-tip__trigger--toggle:hover + {
      .a11y-tip__help,
      .a11y-tip__help:after {
        opacity: 1 !important;
        pointer-events: auto !important;
        visibility: visible !important;
        -webkit-transition: opacity $tip--no-delay ease-in-out,
                  transform $tip--no-delay ease-in-out;
        -moz-transition: opacity $tip--no-delay ease-in-out,
                  transform $tip--no-delay ease-in-out;
        transition: opacity $tip--no-delay ease-in-out,
                  transform $tip--no-delay ease-in-out;
      }
    }

  }

  // by default tooltips have a 1s delay to mimic native tooltips
  // but if you want/need tooltips to show up faster, use this class
  &--no-delay {

    .a11y-tip__help,
    .a11y-tip__help:after {
      -webkit-transition: opacity $tip--no-delay ease-in-out,
                  transform $tip--no-delay ease-in-out;
      -moz-transition: opacity $tip--no-delay ease-in-out,
                  transform $tip--no-delay ease-in-out;
      transition: opacity $tip--no-delay ease-in-out,
                  transform $tip--no-delay ease-in-out;
    }
  }
}


[role="tooltip"].a11y-tip__help {
  background: $tip--bg;
  border-radius: 4px;
  color: $tip--color-white;
  font-size: $tip--base-size + 2;
  left: 50%;
  margin-top: 6px + $tip--arrow-size;
  max-width: 400px;
  min-width: 220px;
  opacity: 0;
  padding: .5em 1em;
  pointer-events: none;
  position: absolute;
  text-align: left;
  top: 100%;
  -webkit-transform: translate(-50%, 10px);
  -moz-transform: translate(-50%, 10px);
  transform: translate(-50%, 10px);
  width: 100%;
  z-index: 10;
  -webkit-transition: opacity .2s $tip--delay ease-in-out;
  -moz-transition: opacity .2s $tip--delay ease-in-out;
  transition: opacity .2s $tip--delay ease-in-out;
  transform-style: preserve-3d;
  visibility: hidden;

  &:after {
    @include triangle( $tip--arrow-size, $tip--bg, bottom );
    bottom: 100%;
    content: '';
    left: 50%;
    margin-top: 6px;
    opacity: 0;
    pointer-events: none;
    position: absolute;
    -webkit-transform: translate(-50%, 10px);
    -moz-transform: translate(-50%, 10px);
    transform: translate(-50%, 10px);
    z-index: 10;
    -webkit-transition: opacity .2s $tip--delay ease-in-out;
    -moz-transition: opacity .2s $tip--delay ease-in-out;
    transition: opacity .2s $tip--delay ease-in-out;
    transform-style: preserve-3d;
    visibility: hidden;
  }


  @if $tip--compile-bottom == true {
    // reposition tip to the top
    &--top {
      bottom: 100%;
      left: 50%;
      margin-bottom: 6px + $tip--arrow-size;
      -webkit-transform-origin: center top;
      -moz-transform-origin: center top;
      transform-origin: center top;
      -webkit-transform: translate(-50%, 10px);
      -moz-transform: translate(-50%, 10px);
      transform: translate(-50%, 10px);

      // cancel bottom default styling
      margin-top: 0;
      top: auto;

      &:after {
        @include triangle( $tip--arrow-size, $tip--bg, top );
        left: 50%;
        margin-bottom: 6px;
        top: 100%;
        -webkit-transform-origin: center top;
        -moz-transform-origin: center top;
        transform-origin: center top;
        -webkit-transform: translate(-50%, -10px);
        -moz-transform: translate(-50%, -10px);
        transform: translate(-50%, -10px);

        // cancel bottom default styling
        margin-top: 0;
      }
    }
  }


  // Left and Right positions are only useful on larger sized
  // screens.  So they should go back to the bottom default
  // positioning/styling when a screen isn't wide enough.
  @media screen and ( min-width: $bp-small ) {

    @if $tip--compile-left == true {
      &--left {
        margin-right: 5px + $tip--arrow-size;
        right: 100%;
        top: 50%;
        -webkit-transform: translate(10px, -50%);
        -moz-transform: translate(10px, -50%);
        transform: translate(10px, -50%);

        // cancel bottom default styling
        left: auto;
        margin-top: 0;

        &:after {
          @include triangle( $tip--arrow-size, $tip--bg, left );
          left: 100%;
          margin-right: 5px;
          top: 50%;
          -webkit-transform: translate(-10px, -50%);
          -moz-transform: translate(-10px, -50%);
          transform: translate(-10px, -50%);

          // cancel bottom default styling
          margin-top: 0;
        }
      }
    } // end @if left


    @if $tip--compile-right == true {
      &--right {
        left: 100%;
        margin-left: 5px + $tip--arrow-size;
        top: 50%;
        -webkit-transform: translate(10px, -50%);
        -moz-transform: translate(10px, -50%);
        transform: translate(10px, -50%);

        // cancel bottom default styling
        margin-top: 0;

        &:after {
          @include triangle( $tip--arrow-size, $tip--bg, right );
          margin-left: 5px;
          right: 100%;
          top: 50%;
          -webkit-transform: translate(10px, -50%);
          -moz-transform: translate(10px, -50%);
          transform: translate(10px, -50%);

          // cancel bottom default styling
          bottom: auto;
          left: auto;
          margin-top: 0;
        }
      }
    } // end @if right
  }
}


// hide tool tips if the ESC key is hit
.#{$ns}a11y-tip--hide .#{$ns}a11y-tip__help {
  display: none;
}


.no-js .#{$ns}a11y-tip__help:not([role]) {
  font-size: .85em;

  &:before {
    content: "(";
  }

  &:after {
    content: ")";
  }
}
